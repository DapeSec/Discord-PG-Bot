version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpassword
      - MONGO_INITDB_DATABASE=discord_bot_conversations
    command: mongod --auth --bind_ip_all
    networks:
      - bot_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  orchestrator:
    build:
      context: ..
      dockerfile: docker/Dockerfile.orchestrator
    ports:
      - "5003:5003"
    volumes:
      - ..:/app
      - ../logs:/app/logs
      - ../chroma_db:/app/chroma_db
    env_file:
      - ../.env
    environment:
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - MONGO_URI=mongodb://admin:adminpassword@mongodb:27017/?authSource=admin
      - MONGO_DB_NAME=discord_bot_conversations
      - MONGO_COLLECTION_NAME=conversations
      - ORCHESTRATOR_HOST=0.0.0.0
      - ORCHESTRATOR_PORT=5003
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - bot_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  peter:
    build:
      context: ..
      dockerfile: docker/Dockerfile.bot
    command: ["./scripts/start-bot.sh", "python", "-m", "src.app.bots.peter_bot"]
    ports:
      - "5005:5005"
    volumes:
      - ..:/app
      - ../logs:/app/logs
      - ../chroma_db:/app/chroma_db
    env_file:
      - ../.env
    environment:
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - MONGO_URI=mongodb://admin:adminpassword@mongodb:27017/?authSource=admin
      - ORCHESTRATOR_API_URL=http://orchestrator:5003/orchestrate
      - BOT_NAME=Peter
      - BOT_PORT=5005
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      orchestrator:
        condition: service_healthy
    networks:
      - bot_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  brian:
    build:
      context: ..
      dockerfile: docker/Dockerfile.bot
    command: ["./scripts/start-bot.sh", "python", "-m", "src.app.bots.brian_bot"]
    ports:
      - "5002:5002"
    volumes:
      - ..:/app
      - ../logs:/app/logs
      - ../chroma_db:/app/chroma_db
    env_file:
      - ../.env
    environment:
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - MONGO_URI=mongodb://admin:adminpassword@mongodb:27017/?authSource=admin
      - ORCHESTRATOR_API_URL=http://orchestrator:5003/orchestrate
      - BOT_NAME=Brian
      - BOT_PORT=5002
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      orchestrator:
        condition: service_healthy
    networks:
      - bot_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  stewie:
    build:
      context: ..
      dockerfile: docker/Dockerfile.bot
    command: ["./scripts/start-bot.sh", "python", "-m", "src.app.bots.stewie_bot"]
    ports:
      - "5004:5004"
    volumes:
      - ..:/app
      - ../logs:/app/logs
      - ../chroma_db:/app/chroma_db
    env_file:
      - ../.env
    environment:
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - MONGO_URI=mongodb://admin:adminpassword@mongodb:27017/?authSource=admin
      - ORCHESTRATOR_API_URL=http://orchestrator:5003/orchestrate
      - BOT_NAME=Stewie
      - BOT_PORT=5004
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      orchestrator:
        condition: service_healthy
    networks:
      - bot_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

networks:
  bot_network:
    driver: bridge

volumes:
  mongodb_data: 